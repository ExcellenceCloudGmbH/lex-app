name: Build image and deploy to env

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      TAG_NAME: ${{ steps.tag-name.outputs.TAG_NAME }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT}}

      - id: "gcloud-auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          version: ">= 363.0.0"

      - uses: "docker/login-action@v1"
        with:
          registry: "europe-docker.pkg.dev"
          username: "oauth2accesstoken"
          password: "${{ steps.gcloud-auth.outputs.access_token }}"

      - name: Check if tag exists for backend in prod registry
        id: check_prod_tag
        run: |
          EXISTS=$(gcloud artifacts docker tags list europe-docker.pkg.dev/superb-blend-305320/lex-prod-registry/lex_app --filter="TAG:${{ github.event.release.tag_name }} --format="value(TAG)" 2>/dev/null)
          if [ -z "$EXISTS" ]; then
            echo "::set-output name=tag_exists::false"
          else
            echo "::set-output name=tag_exists::true"
          fi

      - name: Retag image
        if: steps.check_prod_tag.outputs.tag_exists == 'true'
        run: |
          gcloud artifacts docker tags add europe-docker.pkg.dev/superb-blend-305320/lex-prod-registry/lex_app:${{ github.event.release.tag_name }}" europe-docker.pkg.dev/superb-blend-305320/lex-prod-registry/lex_app:${{ github.event.release.tag_name }}"

      - name: Check if tag exists for backend in public registry
        id: check_public_tag
        run: |
          EXISTS=$(gcloud artifacts docker tags list europe-docker.pkg.dev/superb-blend-305320/lex-prod-registry/lex_app --filter="TAG:${{ github.event.release.tag_name }}"  --format="value(TAG)" 2>/dev/null)
          if [ -z "$EXISTS" ]; then
            echo "::set-output name=tag_exists::false"
          else
            echo "::set-output name=tag_exists::true"
          fi

      - name: Retag image
        if: steps.check_public_tag.outputs.tag_exists == 'true'
        run: |
          gcloud artifacts docker tags add europe-docker.pkg.dev/superb-blend-305320/lex-public-registry/lex_app:${{ github.event.release.tag_name }}" europe-docker.pkg.dev/superb-blend-305320/lex-public-registry/lex_app:${{ github.event.release.tag_name }}"

      - name: Set up Docker Buildx
        if: steps.check_tag.outputs.tag_exists == 'false'
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        if: steps.check_tag.outputs.tag_exists == 'false'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: europe-docker.pkg.dev/superb-blend-305320/lex-prod-registry/lex_app:${{ github.event.release.tag_name }},europe-docker.pkg.dev/superb-blend-305320/lex-public-registry/lex_app:${{ github.event.release.tag_name }}
          context: .
          file: ./build/Dockerfile
          cache-from: type=registry,ref=europe-docker.pkg.dev/superb-blend-305320/lex-prod-registry/lex_app:cache
          cache-to: type=registry,ref=europe-docker.pkg.dev/superb-blend-305320/lex-prod-registry/lex_app:cache,mode=max
